// Generated by CoffeeScript 1.8.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['static/js/KeyCodes'], function(KeyCodes) {
    var KeyanoKeyValidator;
    KeyanoKeyValidator = (function() {
      function KeyanoKeyValidator() {}

      KeyanoKeyValidator.prototype.validateKeyMapping = function(keyMapping) {
        if (!_.isObject(keyMapping)) {
          throw new Error("Tried to activate a key using an non-object { keyCode, pianoKey } parameter");
        }
        this._validateKeyCode(keyMapping.keyCode);
        this._validatePianoKey(keyMapping.pianoKey);
      };


      /*
      @params
        keyCode : (integer) the keyboard keyCode that will trigger the piano key
      @throws
        Error if
          - The key code is not an integer
          - The key code value is unrecognized
      @return
        N/A
       */

      KeyanoKeyValidator.prototype._validateKeyCode = function(keyCode) {
        var _ref;
        if (!_.isNumber(keyCode)) {
          throw new Error("Tried to activate a key using a non-integer keyCode");
        }
        if (_ref = !keyCode, __indexOf.call(_.values(KeyCodes), _ref) >= 0) {
          throw new Error("Tried to activate a key using an unrecognized keyCode value");
        }
      };


      /*
      @params
        pianoKey : {
          id        : (string) the unique ID for the piano key
          frequency : (float)  the pitch of the piano key in hertz
        }
      @throws
        Error if
          - The piano key ID is invalid
          - The piano key frequency is invalid
      @return
        N/A
       */

      KeyanoKeyValidator.prototype._validatePianoKey = function(pianoKey) {
        var hasValidFrequency, hasValidId;
        hasValidId = _.isString(pianoKey.id);
        hasValidFrequency = _.isNumber(pianoKey.frequency) && _.isFinite(pianoKey.frequency);
        if (!hasValidId) {
          throw new Error("Tried to register a piano key with an non-string ID: " + pianoKey.id);
        }
        if (!hasValidFrequency) {
          throw new Error("Tried to register a piano key with a non-numeric frequency: " + pianoKey.frequency);
        }
      };

      return KeyanoKeyValidator;

    })();
    return KeyanoKeyValidator;
  });

}).call(this);

//# sourceMappingURL=KeyanoKeyValidator.js.map
