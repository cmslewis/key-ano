// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['static/js/listeners/AbstractKeyanoListener'], function(AbstractKeyanoListener) {
    var KeyanoDomElementHighlighter;
    KeyanoDomElementHighlighter = (function(_super) {
      __extends(KeyanoDomElementHighlighter, _super);

      function KeyanoDomElementHighlighter() {
        return KeyanoDomElementHighlighter.__super__.constructor.apply(this, arguments);
      }

      KeyanoDomElementHighlighter.prototype.DEFAULT_KEYANO_KEY_SELECTOR = '.KeyanoInstrument-key';

      KeyanoDomElementHighlighter.prototype._domElementCache = null;

      KeyanoDomElementHighlighter.prototype._keyanoKeySelector = null;

      KeyanoDomElementHighlighter.prototype.activate = function(keyanoKeys, keyanoKeySelector) {
        if (keyanoKeySelector == null) {
          keyanoKeySelector = this.DEFAULT_KEYANO_KEY_SELECTOR;
        }
        if (!_.isObject(keyanoKeys)) {
          throw new Error('Received a missing or invalid keyanoKeys object parameter');
        }
        if (!_.isString(keyanoKeySelector)) {
          throw new Error('Received a non-string keyanoKeySelector parameter');
        }
        KeyanoDomElementHighlighter.__super__.activate.apply(this, arguments);
        this._domElementCache = {};
        this._keyanoKeySelector = keyanoKeySelector;
        return this._fillCacheOfKeyanoKeyDomElements(keyanoKeys);
      };

      KeyanoDomElementHighlighter.prototype.onPianoKeyStartedPlaying = function(ev, pianoKeyId) {
        var _ref;
        if ((_ref = this._domElementCache[pianoKeyId]) != null) {
          _ref.addClass('is-depressed');
        }
      };

      KeyanoDomElementHighlighter.prototype.onPianoKeyStoppedPlaying = function(ev, pianoKeyId) {
        var _ref;
        if ((_ref = this._domElementCache[pianoKeyId]) != null) {
          _ref.removeClass('is-depressed');
        }
      };

      KeyanoDomElementHighlighter.prototype._fillCacheOfKeyanoKeyDomElements = function(keyanoKeys) {
        _.chain(keyanoKeys).pluck('pianoKey').forEach((function(_this) {
          return function(pianoKey) {
            var $elem;
            $elem = $("" + _this._keyanoKeySelector + "[data-piano-key-id='" + pianoKey.id + "']");
            return _this._domElementCache[pianoKey.id] = $elem;
          };
        })(this));
      };

      return KeyanoDomElementHighlighter;

    })(AbstractKeyanoListener);
    return KeyanoDomElementHighlighter;
  });

}).call(this);

//# sourceMappingURL=KeyanoDomElementHighlighter.js.map
