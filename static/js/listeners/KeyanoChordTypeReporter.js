// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['static/js/listeners/AbstractKeyanoListener'], function(AbstractKeyanoListener) {
    var KeyanoChordTypeReporter;
    KeyanoChordTypeReporter = (function(_super) {
      __extends(KeyanoChordTypeReporter, _super);

      function KeyanoChordTypeReporter() {
        return KeyanoChordTypeReporter.__super__.constructor.apply(this, arguments);
      }

      KeyanoChordTypeReporter.prototype.keyanoKeys = null;

      KeyanoChordTypeReporter.prototype.activate = function(keyanoKeys) {
        this.keyanoKeys = keyanoKeys;
        return KeyanoChordTypeReporter.__super__.activate.apply(this, arguments);
      };

      KeyanoChordTypeReporter.prototype.onPianoKeyStartedPlaying = function(ev, pianoKeyId) {
        this._printChord();
      };

      KeyanoChordTypeReporter.prototype.onPianoKeyStoppedPlaying = function(ev, pianoKeyId) {
        this._printChord();
      };

      KeyanoChordTypeReporter.prototype._printChord = function() {
        var chord, impressedPianoKeys;
        impressedPianoKeys = this.instrument.getImpressedPianoKeys();
        chord = this._identifyChord(impressedPianoKeys);
        return console.log(chord);
      };


      /*
      Returns the name of the chord indicated by the provided piano key combination.
      @params
        pianoKeys : [
          <pianoKeyId> (string),
          ...
        ]
      @return
        (string) the name of the chord (e.g. CM7)
       */

      KeyanoChordTypeReporter.prototype._identifyChord = function(pianoKeys) {
        console.log(pianoKeys);
        return 'CM7';
      };

      return KeyanoChordTypeReporter;

    })(AbstractKeyanoListener);
    return KeyanoChordTypeReporter;
  });

}).call(this);

//# sourceMappingURL=KeyanoChordTypeReporter.js.map
